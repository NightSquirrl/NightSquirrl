import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as n,o as t}from"./app-DHpiXQOM.js";const i={};function r(o,e){return t(),s("div",null,e[0]||(e[0]=[n(`<h2 id="git-无法检测到-文件夹命名大小写的变化如何解决" tabindex="-1"><a class="header-anchor" href="#git-无法检测到-文件夹命名大小写的变化如何解决"><span>git 无法检测到 文件夹命名大小写的变化如何解决</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config core.ignorecase <span class="token comment"># 查看本地仓库git忽略大小写是打开还是关闭</span>
<span class="token function">git</span> config core.ignorecase <span class="token boolean">false</span> <span class="token comment"># 关闭忽略大小写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改上次提交" tabindex="-1"><a class="header-anchor" href="#修改上次提交"><span>修改上次提交</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">--amend</span> <span class="token parameter variable">-branch_name</span> <span class="token string">&#39;新的描述&#39;</span> <span class="token comment"># 修改上次提交</span>

<span class="token comment"># 如果上次的commit还没有推送到远程仓库</span>
<span class="token function">git</span> push origin branch_name <span class="token comment"># 推送到远程仓库</span>
<span class="token comment"># 如果上次的commit已经推送到远程仓库</span>
<span class="token function">git</span> push <span class="token parameter variable">-f</span> origin branch_name <span class="token comment"># 强制推送到远程仓库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="撤销提交" tabindex="-1"><a class="header-anchor" href="#撤销提交"><span>撤销提交</span></a></h2><h3 id="git-reset" tabindex="-1"><a class="header-anchor" href="#git-reset"><span><code>git reset</code></span></a></h3><p><code>git reset</code>,可以改变<code>GIT</code>历史记录,主要作用将指针(HEAD和分支)移动到指定的提交位置,并根据选项改变工作区域和暂存的状态.</p><p>使用场景</p><ul><li>撤销最近的或特定的提交（不保留提交历史）。</li><li>修改提交历史（通常用于本地开发，不推荐用于已推送的提交）。</li></ul><h4 id="模式" tabindex="-1"><a class="header-anchor" href="#模式"><span>模式</span></a></h4><p><code>--soft</code>:该命令表示撤销代码到暂存区之后，<code>commit</code>之前，代码在本地不会改变。[保留修改的代码并执行了<code>git add</code>] <code>--mixed</code>:该命令表示撤销代码到暂存区和<code>commit</code>之前，代码在本地不会改变。[正常的编辑状态] <code>--hard</code>:该命令表示回退代码到某个版本下，代码在本地会改变到指定版本下，谨慎操作。[直接舍弃掉所有,只前往你想去的地方]</p><h4 id="指针head的方式" tabindex="-1"><a class="header-anchor" href="#指针head的方式"><span>指针HEAD的方式</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git reset <span class="token operator">--</span>soft <span class="token constant">HEAD</span><span class="token operator">^</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>HEAD<sup>表示撤销到上一个版本号，其中一个</sup>表示上一次，^^表示上上次，以此类推。另外，需要注意，非windows系统下正常输入git reset --soft HEAD^，即可将代码撤销到git add .之后的状态（暂存区状态）。但是windows系统下需要输入git reset --soft HEAD^^才可以。</p><p>这是因为在windows系统下cmd控制台中换行符默认是<sup>，而不是 ，如果输入少了，会提示more？，意思是问你下一行是否需要再输入，而</sup>符号就被当做换行符而被git命令忽略掉了。</p><p>因此，如果在windows下是撤销2次commit,需要输入4个^才可以</p><div class="language-javascirpt line-numbers-mode" data-ext="javascirpt" data-title="javascirpt"><pre class="language-javascirpt"><code>git reset --soft HEAD~1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此命令不分windows系统和非windows的问题，可以优先使用这个。</p><h4 id="指定id-git-reset-mode-commit" tabindex="-1"><a class="header-anchor" href="#指定id-git-reset-mode-commit"><span>指定id <code>git reset --mode &lt;commit&gt;</code></span></a></h4><p><code>git log</code>查看git 日志</p><p>假设有如下的记录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>commit ccxxx
<span class="token literal-property property">Merge</span><span class="token operator">:</span> ead79dc <span class="token number">4395577</span>
<span class="token literal-property property">Author</span><span class="token operator">:</span> xxxx
<span class="token literal-property property">Date</span><span class="token operator">:</span>   Mon Jan <span class="token number">20</span> <span class="token number">19</span><span class="token operator">:</span><span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span> <span class="token number">2025</span> <span class="token operator">+</span><span class="token number">0800</span>

<span class="token number">1</span>
    merge master into master   

<span class="token operator">...</span>

commit 439xx
<span class="token literal-property property">Author</span><span class="token operator">:</span> xxx
<span class="token literal-property property">Date</span><span class="token operator">:</span>   Mon Jan <span class="token number">20</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">36</span> <span class="token number">2025</span> <span class="token operator">+</span><span class="token number">0800</span>

<span class="token number">2</span>
<span class="token operator">...</span>

commit eadxxx
<span class="token literal-property property">Merge</span><span class="token operator">:</span> 4adc307 ef24d77
<span class="token literal-property property">Author</span><span class="token operator">:</span> xxx
<span class="token literal-property property">Date</span><span class="token operator">:</span>   Mon Jan <span class="token number">20</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">41</span> <span class="token number">2025</span> <span class="token operator">+</span><span class="token number">0800</span>

<span class="token number">3</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想要回滚到3的位置</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git reset <span class="token operator">--</span>soft eadxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>详细说明 指定到3的位置,那么3之前的commit的修改的记录会回到你的本次代码中根据你的模式来判断是否暂存,还是丢弃</p></blockquote><h3 id="git-revert" tabindex="-1"><a class="header-anchor" href="#git-revert"><span><code>git revert</code></span></a></h3><p><code>git revert</code> 用于 撤销指定提交，通过创建新的提交来保留完整的提交历史。</p><p>使用场景</p><ul><li>撤销某次提交的改动（保留历史记录）。</li><li>用于修复错误提交，特别是在代码已推送到远程仓库时。</li></ul><h4 id="撤销单个提交" tabindex="-1"><a class="header-anchor" href="#撤销单个提交"><span>撤销单个提交</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git revert <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>创建一个新的提交，用于撤销<code> &lt;commit&gt;</code> 所作的改动。</p></blockquote><h4 id="撤销多个提交" tabindex="-1"><a class="header-anchor" href="#撤销多个提交"><span>撤销多个提交</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git revert <span class="token operator">&lt;</span>start<span class="token operator">-</span>commit<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>end<span class="token operator">-</span>commit<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>撤销从<code>&lt;start-commit&gt;</code> 到 <code>&lt;end-commit&gt;</code>（不包括 <code>&lt;end-commit&gt;</code>）之间的提交。</p></blockquote><h4 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h4><ul><li>非破坏性操作，保留提交历史。</li><li>创建一个新提交，因此在协作开发中更安全。</li><li>适合在已经推送到远程仓库的情况下使用。</li></ul><h3 id="总结命令" tabindex="-1"><a class="header-anchor" href="#总结命令"><span>总结命令</span></a></h3><h4 id="已提交但是没有push" tabindex="-1"><a class="header-anchor" href="#已提交但是没有push"><span>已提交但是没有push</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 已提交但是没有push</span>
<span class="token function">git</span> reset <span class="token parameter variable">--soft</span> HEAD^ <span class="token comment"># 撤销提交</span>
<span class="token function">git</span> reset <span class="token parameter variable">--mixed</span> HEAD^ <span class="token comment"># 撤销提交并保留修改也就是撤销commit add</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="已提交并且已经push" tabindex="-1"><a class="header-anchor" href="#已提交并且已经push"><span>已提交并且已经push</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD^ <span class="token comment"># 撤销提交并删除修改 会丢掉所有的代码包括git commit的记录</span>
<span class="token function">git</span> revert HEAD^ <span class="token comment"># 撤销提交并保留修改</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,42)]))}const c=a(i,[["render",r],["__file","collect.html.vue"]]),d=JSON.parse('{"path":"/server/git/collect.html","title":"🥹 git 收集","lang":"zh-CN","frontmatter":{"title":"🥹 git 收集","tag":["git"],"star":true,"description":"git 无法检测到 文件夹命名大小写的变化如何解决 修改上次提交 撤销提交 git reset git reset,可以改变GIT历史记录,主要作用将指针(HEAD和分支)移动到指定的提交位置,并根据选项改变工作区域和暂存的状态. 使用场景 撤销最近的或特定的提交（不保留提交历史）。 修改提交历史（通常用于本地开发，不推荐用于已推送的提交）。 模式 -...","head":[["meta",{"property":"og:url","content":"https://soft-vault.com/server/git/collect.html"}],["meta",{"property":"og:site_name","content":"Night.Soul"}],["meta",{"property":"og:title","content":"🥹 git 收集"}],["meta",{"property":"og:description","content":"git 无法检测到 文件夹命名大小写的变化如何解决 修改上次提交 撤销提交 git reset git reset,可以改变GIT历史记录,主要作用将指针(HEAD和分支)移动到指定的提交位置,并根据选项改变工作区域和暂存的状态. 使用场景 撤销最近的或特定的提交（不保留提交历史）。 修改提交历史（通常用于本地开发，不推荐用于已推送的提交）。 模式 -..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-27T07:28:42.000Z"}],["meta",{"property":"article:author","content":"Night.Soul"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2025-01-27T07:28:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🥹 git 收集\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-27T07:28:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Night.Soul\\",\\"url\\":\\"https://github.com/NightSquirrl\\"}]}"]]},"headers":[{"level":2,"title":"git 无法检测到 文件夹命名大小写的变化如何解决","slug":"git-无法检测到-文件夹命名大小写的变化如何解决","link":"#git-无法检测到-文件夹命名大小写的变化如何解决","children":[]},{"level":2,"title":"修改上次提交","slug":"修改上次提交","link":"#修改上次提交","children":[]},{"level":2,"title":"撤销提交","slug":"撤销提交","link":"#撤销提交","children":[{"level":3,"title":"git reset","slug":"git-reset","link":"#git-reset","children":[]},{"level":3,"title":"git revert","slug":"git-revert","link":"#git-revert","children":[]},{"level":3,"title":"总结命令","slug":"总结命令","link":"#总结命令","children":[]}]}],"git":{"createdTime":1709391746000,"updatedTime":1737962922000,"contributors":[{"name":"nightsoul","email":"w1083670160@163.com","commits":2},{"name":"Rocco Koury","email":"83497094+NightSquirrl@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1008},"filePathRelative":"server/git/collect.md","localizedDate":"2024年3月2日","excerpt":"<h2>git 无法检测到 文件夹命名大小写的变化如何解决</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">git</span> config core.ignorecase <span class=\\"token comment\\"># 查看本地仓库git忽略大小写是打开还是关闭</span>\\n<span class=\\"token function\\">git</span> config core.ignorecase <span class=\\"token boolean\\">false</span> <span class=\\"token comment\\"># 关闭忽略大小写</span>\\n</code></pre></div>","autoDesc":true}');export{c as comp,d as data};
